import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:my_app/components/custom_bar.dart';
import 'package:my_app/pages/login_page.dart';
import 'package:my_app/components/menu_title.dart';

import 'package:my_app/student/student_attendancehistory_page.dart';
import 'package:my_app/student/leave_upload_page.dart';
import 'package:my_app/student/pending_approvals_page.dart';
import 'package:my_app/student/student_courses_page.dart';
import 'package:my_app/student/qr_scan_page.dart';
import 'package:my_app/student/student_calendar_loader.dart';

// ‚úÖ ‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ (‡∏ï‡∏≤‡∏°‡πÑ‡∏ü‡∏•‡πå/‡∏Ñ‡∏•‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ)
import 'package:my_app/pages/edit_profile_page.dart'
    show EditProfileStudentPage, EditProfilePage;
import 'package:shared_preferences/shared_preferences.dart';

class AppColors {
  static const primary = Color(0xFF4A86E8);
  static const ink = Color(0xFF1F2937);
  static const sub = Color.fromARGB(255, 196, 199, 208);
  static const fabRing = Color(0xFFA6CAFA);
}

class MenuItemData {
  final String title;
  final String svgPath;
  MenuItemData(this.title, this.svgPath);
}

class StudentHomePage extends StatelessWidget {
  // üîß non-nullable ‡πÅ‡∏•‡∏∞ required
  final String userId;
  const StudentHomePage({super.key, required this.userId});

  @override
  Widget build(BuildContext context) {
    final items = <MenuItemData>[
      MenuItemData("‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô", "assets/calendar.svg"),
      MenuItemData("‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏•‡∏≤/‡∏°‡∏≤‡∏™‡∏≤‡∏¢", "assets/file.svg"),
      MenuItemData("‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏£‡∏≠\n‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥", "assets/document.svg"),
      MenuItemData("‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥\n‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô", "assets/history.svg"),
      MenuItemData("‡∏™‡∏£‡∏∏‡∏õ\n‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô", "assets/piechart.svg"),
    ];
    final topRow = items.sublist(0, 2);
    final bottomRow = items.sublist(2);

    // ===== ‡πÉ‡∏ä‡πâ CustomBottomBarWithFab ‡∏Ñ‡∏£‡∏≠‡∏ö body ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î =====
    return CustomBottomBarWithFab(
      role: 'student',
      onHome: () {
        // ‡∏´‡∏ô‡πâ‡∏≤ Home ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‚Äî ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£
      },
      onLogout: () {
        Navigator.pushAndRemoveUntil(
          context,
          MaterialPageRoute(
            builder: (_) => const LoginPage(),
          ), // ‡∏´‡∏£‡∏∑‡∏≠ SplashScreen()
          (route) => false, // üîπ ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤ ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ
        );
      },
      onFabTap: () async {
        final result = await Navigator.push(
          context,
          MaterialPageRoute(builder: (_) => const QRScanPage()),
        );
        if (result != null) {
          debugPrint('QR Result: $result');
        }
      },

      // ===== Body ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì =====
      body: SafeArea(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // üîπ Top icons (‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå)
            Padding(
              padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 8),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.end,
                children: [
                  InkWell(
                    borderRadius: BorderRadius.circular(50),
                    onTap: () async {
                      // ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å SharedPreferences ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏∞ fallback ‡πÄ‡∏õ‡πá‡∏ô userId ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å constructor
                      final prefs = await SharedPreferences.getInstance();
                      final savedId = prefs.getString('userId');
                      final uid = (savedId != null && savedId.isNotEmpty)
                          ? savedId
                          : userId;

                      if (uid.isEmpty) {
                        ScaffoldMessenger.of(context).showSnackBar(
                          const SnackBar(
                            content: Text(
                              '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà',
                            ),
                          ),
                        );
                        return;
                      }

                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (_) =>
                              EditProfilePage(userId: uid, role: 'student'),
                        ),
                      );
                    },

                    child: SvgPicture.asset(
                      "assets/profile.svg",
                      width: 34,
                      height: 34,
                    ),
                  ),
                ],
              ),
            ),

            // üîπ ‡πÇ‡∏•‡πÇ‡∏Å‡πâ
            Padding(
              padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
              child: Center(
                child: ConstrainedBox(
                  constraints: BoxConstraints(
                    maxHeight: MediaQuery.of(context).size.height * 0.28,
                    minHeight: 120,
                  ),
                  child: Image.asset(
                    'assets/unicheck1.png',
                    height: 250,
                    fit: BoxFit.contain,
                    errorBuilder: (_, __, ___) =>
                        const Icon(Icons.image, size: 80, color: AppColors.sub),
                  ),
                ),
              ),
            ),
            const SizedBox(height: 10),

            // üîπ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÄ‡∏°‡∏ô‡∏π
            const Padding(
              padding: EdgeInsets.symmetric(horizontal: 26),
              child: Text(
                "Menu",
                style: TextStyle(
                  fontSize: 16,
                  fontWeight: FontWeight.w600,
                  color: Colors.black,
                ),
              ),
            ),
            const SizedBox(height: 12),

            // üîπ ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π
            Expanded(
              child: Padding(
                padding: EdgeInsets.fromLTRB(
                  24,
                  8,
                  24,
                  kBottomNavigationBarHeight /*‚âà56*/ + 0, // ‡∏£‡∏ß‡∏°‡πÄ‡∏ú‡∏∑‡πà‡∏≠ FAB
                ),
                child: Column(
                  // mainAxisAlignment: MainAxisAlignment.spaceEvenly, // ‚úÖ ‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô
                  children: [
                    // ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô
                    Row(
                      children: [
                        Expanded(
                          child: MenuTitle(
                            title: topRow[0].title,
                            svgPath: topRow[0].svgPath,
                            iconBg: const Color(0xFFCDE0F9),
                            iconColor: Colors.black,
                            textColor: Colors.black,
                            onTap: () {
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                  builder: (_) =>
                                      const StudentCalendarLoader(), // ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡∏à‡∏≤‡∏Å API
                                ),
                              );
                            },
                          ),
                        ),
                        const SizedBox(width: 16),
                        Expanded(
                          child: MenuTitle(
                            title: topRow[1].title,
                            svgPath: topRow[1].svgPath,
                            iconBg: const Color(0xFFCDE0F9),
                            iconColor: Colors.black,
                            textColor: Colors.black,
                            onTap: () => Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (_) => const LeaveUploadPage(),
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(height: 16),

                    // ‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏á
                    Row(
                      children: [
                        Expanded(
                          child: MenuTitle(
                            title: bottomRow[0].title,
                            svgPath: bottomRow[0].svgPath,
                            iconBg: const Color(0xFFCDE0F9),
                            iconColor: Colors.black,
                            textColor: Colors.black,
                            onTap: () => Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (_) => PendingApprovalsPage(
                                  approvals:
                                      const [], // ‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏î‡πâ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
                                ),
                              ),
                            ),
                          ),
                        ),
                        const SizedBox(width: 16),
                        Expanded(
                          child: MenuTitle(
                            title: bottomRow[1].title,
                            svgPath: bottomRow[1].svgPath,
                            iconBg: const Color(0xFFCDE0F9),
                            iconColor: Colors.black,
                            textColor: Colors.black,
                            onTap: () {
                              final List<Map<String, String>> myCourses =
                                  []; // ‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å backend ‡πÑ‡∏î‡πâ
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                  builder: (_) =>
                                      AttendanceHistoryPage(courses: myCourses),
                                ),
                              );
                            },
                          ),
                        ),
                        const SizedBox(width: 16),
                        Expanded(
                          child: MenuTitle(
                            title: bottomRow[2].title,
                            svgPath: bottomRow[2].svgPath,
                            iconBg: const Color(0xFFCDE0F9),
                            iconColor: Colors.black,
                            textColor: Colors.black,
                            onTap: () => Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (_) => const StudentCoursesPage(),
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
